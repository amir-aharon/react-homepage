{"version":3,"sources":["elements/Expandable.js","components/Layout/Header.js","firebase.js","components/TodoSection/Task.js","components/TodoSection/TodoForm.js","components/TodoSection/TodoList.js","components/TodoSection/TodoMain.jsx","App.js","index.js"],"names":["Expandable","_ref","words","react_default","a","createElement","className","key","map","word","substring","Header","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Task","task","handleToggle","handleDelete","handleChange","handleTogClick","e","preventDefault","currentTarget","id","complete","contentEditable","value","onBlur","ButtonGroup","IconButton","onClick","CheckCircleOutline_default","aria-label","CircleOutlined_default","RemoveCircle_default","TodoForm","addTask","_useState","useState","_useState2","Object","slicedToArray","userInput","setUserInput","onSubmit","ThemeProvider","theme","TextField","autoComplete","label","variant","color","fullWidth","onChange","createTheme","status","danger","palette","primary","main","darker","neutral","contrastText","TodoList","todoList","Stack","direction","divider","Divider","orientation","flexItem","spacing","todo","CURRENT_COLLECTION","TodoMain","setTodoList","db","getFirestore","ref","collection","maxId","length","getTasks","_getTasks","apply","this","arguments","asyncToGenerator","_regeneratorRuntime","mark","_callee5","q","items","done","undone","wrap","_context5","prev","next","query","getDocs","sent","forEach","doc","push","data","sort","b","filter","concat","toConsumableArray","stop","useEffect","_callee","_context","where","Number","d","docRef","updateDoc","objectSpread","_x","_x2","_ref2","_callee2","_context2","deleteDoc","_x3","_ref3","_callee3","text","newTask","_context3","addDoc","_x4","_ref4","_callee4","content","_context4","target","textContent","_x5","App","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.8d337831.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Expandable({ words }) {\r\n    return (\r\n        <div className=\"title\" key=\"exp\">\r\n            {words.map(word => {\r\n                if (word === \" &#x2764; \")\r\n                    return <span className=\"heart\" key=\"heart\"> &#x2764; </span>\r\n                return [<span key=\"firstWord\">{word[0]}</span>,\r\n                        <span key=\"secondWord\">{word.substring(1)}</span>]\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","// React & CSS\r\nimport React from 'react';\r\nimport './header.css';\r\n// Custom Ui Component\r\nimport Expandable from '../../elements/Expandable';\r\n// Components\r\n// import SignOut from '../Auth/SignOut';\r\n\r\n// Page's title\r\nexport default function Header() {\r\n  return (\r\n    <div className='header'>\r\n      <Expandable words={['Amir', ' &#x2764; ' /* heart */, 'Michal']} />\r\n    </div>\r\n  );\r\n}\r\n","// Firebase & db\r\nimport { initializeApp } from 'firebase/app';\r\n\r\n// Key to the application\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyCX4S19JEGIJnf255mMBKf609TyjYb8fvk',\r\n  authDomain: 'amir-michal-homepage.firebaseapp.com',\r\n  projectId: 'amir-michal-homepage',\r\n  storageBucket: 'amir-michal-homepage.appspot.com',\r\n  messagingSenderId: '668244217822',\r\n  appId: '1:668244217822:web:3df6be5852f87331ab574f',\r\n  measurementId: 'G-QP2T9TXQW6',\r\n};\r\n\r\n// Run app\r\nconst app = initializeApp(firebaseConfig);\r\nexport default app;\r\n","// Import react & styles\r\nimport React from 'react';\r\nimport './task.css';\r\n// Import icons & ui-components\r\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\r\nimport CircleOutlinedIcon from '@mui/icons-material/CircleOutlined';\r\nimport RemoveCircleIcon from '@mui/icons-material/RemoveCircle';\r\nimport { IconButton, ButtonGroup } from '@mui/material';\r\n\r\n// A single task tag\r\nexport default function Task({\r\n  task,\r\n  handleToggle,\r\n  handleDelete,\r\n  handleChange,\r\n}) {\r\n  const handleTogClick = (e) => {\r\n    e.preventDefault();\r\n    handleToggle(e.currentTarget.id, task);\r\n  }; // Handles check button\r\n\r\n  const handleDelClick = (e) => {\r\n    e.preventDefault();\r\n    handleDelete(e.currentTarget.id);\r\n  }; // Handles delete button\r\n\r\n  return (\r\n    <div id={task.id} key='task' className='todo'>\r\n      {/* Content of the task */}\r\n      <span\r\n        className={\r\n          // Style complete tasks\r\n          task.complete ? 'todo-content complete' : 'todo-content'\r\n        }\r\n        id={task.id} // Id for handlers\r\n        contentEditable='true' // Can edit already written tasks\r\n        value={task.task} // Fixes contentEditable issues\r\n        onBlur={handleChange} // Save changes when stop editing\r\n      >\r\n        {task.task /* Displaying the correct text */}\r\n      </span>\r\n\r\n      <ButtonGroup className='todo-actions' key='task-actions'>\r\n        {/* Check button */}\r\n        {task.complete ? (\r\n          // If task is completed\r\n          <IconButton\r\n            id={task.id} // Id for handlers\r\n            onClick={handleTogClick} // Toggles check mark\r\n          >\r\n            <CheckCircleOutlineIcon className='todo-btn check-btn' />\r\n          </IconButton>\r\n        ) : (\r\n          // If task isn't completed\r\n          <IconButton aria-label='check' id={task.id} onClick={handleTogClick}>\r\n            <CircleOutlinedIcon className='todo-btn check-btn' />\r\n          </IconButton>\r\n        )}\r\n\r\n        {/* Delete button */}\r\n        <IconButton\r\n          id={task.id} // Id for handlers\r\n          onClick={handleDelClick} // Deletes task\r\n        >\r\n          <RemoveCircleIcon className='todo-btn delete-btn' />\r\n        </IconButton>\r\n      </ButtonGroup>\r\n    </div>\r\n  );\r\n}\r\n","// React & CSS\r\nimport React, { useState } from 'react';\r\nimport './todo-form.css';\r\n// Ui Components\r\nimport { TextField, ThemeProvider } from '@mui/material';\r\nimport { createTheme } from '@mui/material/styles';\r\n\r\n// New task text field\r\nexport default function TodoForm({ addTask }) {\r\n  // Reset state on mount\r\n  const [userInput, setUserInput] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setUserInput(e.currentTarget.value);\r\n  }; // Handles changes in text\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addTask(userInput);\r\n    setUserInput('');\r\n  }; // Handles submit action\r\n\r\n  return (\r\n    <div className='todo-form'>\r\n      <form onSubmit={handleSubmit}>\r\n        <ThemeProvider theme={theme}>\r\n          <TextField\r\n            autoComplete='off'\r\n            label='Enter a new item'\r\n            variant='standard'\r\n            color='neutral'\r\n            fullWidth='true'\r\n            value={userInput}\r\n            onChange={handleChange}\r\n          />\r\n        </ThemeProvider>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst theme = createTheme({\r\n  status: {\r\n    danger: '#e53e3e',\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: '#0971f1',\r\n      darker: '#053e85',\r\n    },\r\n    neutral: {\r\n      main: '#3A4750',\r\n      contrastText: '#3A4750',\r\n    },\r\n  },\r\n});\r\n","// React & CSS\r\nimport React from 'react';\r\nimport './todo-list.css';\r\n// Components\r\nimport Task from './Task';\r\nimport TodoForm from './TodoForm';\r\n// Ui Components\r\nimport { Stack, Divider } from '@mui/material';\r\n\r\n// List object: form + items\r\nexport default function TodoList({\r\n  todoList,\r\n  handleToggle,\r\n  handleDelete,\r\n  addTask,\r\n  handleChange,\r\n}) {\r\n  return (\r\n    <Stack className='list'>\r\n      {/* Input */}\r\n      <TodoForm addTask={addTask} />\r\n      {/* Items */}\r\n      <Stack\r\n        direction='column' // Vertical\r\n        divider={\r\n          // Seperates tasks\r\n          <Divider orientation='horizontal' flexItem className='divider' />\r\n        }\r\n        spacing={2}\r\n      >\r\n        {todoList.map((todo) => {\r\n          // Creates task objects dynamically\r\n          return (\r\n            <Task\r\n              task={todo}\r\n              handleToggle={handleToggle}\r\n              handleDelete={handleDelete}\r\n              handleChange={handleChange}\r\n            />\r\n          );\r\n        })}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n","// React & Firebase\r\nimport React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport app from './../../firebase';\r\nimport {\r\n  addDoc,\r\n  collection,\r\n  getFirestore,\r\n  query,\r\n  getDocs,\r\n  where,\r\n  updateDoc,\r\n  doc,\r\n  deleteDoc,\r\n} from 'firebase/firestore';\r\n// import { useCollectionData } from 'react-firebase-hooks/firestore';\r\n// Components\r\nimport TodoList from './TodoList';\r\n\r\n// Constant reference to the todo collection\r\nconst CURRENT_COLLECTION = 'todo-list';\r\n\r\n// Main container of the todo list\r\nexport default function TodoMain() {\r\n  // Reset state on mount\r\n  const [todoList, setTodoList] = useState([]);\r\n  const db = getFirestore(app);\r\n  const ref = collection(db, CURRENT_COLLECTION);\r\n  let maxId = todoList.length > 0 ? todoList[todoList.length - 1].id : 0;\r\n\r\n  useEffect(() => {\r\n    getTasks();\r\n  }, []); // Subscribe to colleciton changes\r\n\r\n  async function getTasks() {\r\n    const q = query(ref);\r\n\r\n    const items = [];\r\n    const querySnapshot = await getDocs(q);\r\n    querySnapshot.forEach((doc) => {\r\n      items.push(doc.data());\r\n    });\r\n\r\n    items.sort((a, b) => a.id - b.id);\r\n    maxId = items[items.length - 1].id + 1;\r\n    const done = items.filter((task) => task.complete === true);\r\n    const undone = items.filter((task) => task.complete === false);\r\n\r\n    setTodoList([...undone, ...done]);\r\n  } // Set state as a sorted-by-completion collection array\r\n\r\n  const handleToggle = async (id, task) => {\r\n    const q = query(ref, where('id', '==', Number(id)));\r\n    const querySnapshot = await getDocs(q);\r\n    querySnapshot.forEach((d) => {\r\n      const docRef = doc(db, CURRENT_COLLECTION, d.id);\r\n      // console.log(docRef);\r\n      updateDoc(docRef, { complete: !task.complete });\r\n    });\r\n\r\n    todoList.map((task) => {\r\n      return task.id === Number(id)\r\n        ? { ...task, complete: !task.complete }\r\n        : task;\r\n    });\r\n\r\n    getTasks();\r\n  }; // Update completion checkboxes to db\r\n\r\n  const handleDelete = async (id) => {\r\n    const q = query(ref, where('id', '==', Number(id)));\r\n    const querySnapshot = await getDocs(q);\r\n    querySnapshot.forEach((d) => {\r\n      const docRef = doc(db, CURRENT_COLLECTION, d.id);\r\n      // console.log(docRef);\r\n      deleteDoc(docRef);\r\n      getTasks();\r\n    });\r\n\r\n    // ref\r\n    //   .where('id', '==', Number(id))\r\n    //   .get()\r\n    //   .then((res) => {\r\n    //     res.docs.forEach((doc) => {\r\n    //       const docRef = app\r\n    //         .firestore()\r\n    //         .collection(CURRENT_COLLECTION)\r\n    //         .doc(doc.id);\r\n    //       docRef.delete();\r\n    //       //// DEBUG: Prints success/error messages on deletion\r\n    //       // .then(() => {\r\n    //       //   console.log(\"Document successfully deleted!\");\r\n    //       // }).catch((e) => {\r\n    //       //   console.error(\"Error removing document: \", e);\r\n    //       // })\r\n    //     });\r\n    //   });\r\n  }; // Delete document from db by id\r\n\r\n  const addTask = async (text) => {\r\n    todoList.sort((a, b) => a.id - b.id);\r\n    maxId = todoList[todoList.length - 1].id + 1;\r\n    const newTask = {\r\n      id: maxId,\r\n      task: text,\r\n      complete: false,\r\n    };\r\n    await addDoc(ref, newTask);\r\n    getTasks();\r\n  }; // Adds task to db\r\n\r\n  const handleChange = async (e) => {\r\n    let id = e.target.id;\r\n    let content = e.target.textContent;\r\n\r\n    const q = query(ref, where('id', '==', Number(id)));\r\n    const querySnapshot = await getDocs(q);\r\n    querySnapshot.forEach((d) => {\r\n      const docRef = doc(db, CURRENT_COLLECTION, d.id);\r\n      // console.log(docRef);\r\n      updateDoc(docRef, { task: content });\r\n    });\r\n  }; // Update changes in tasks' content to db\r\n\r\n  return (\r\n    <div className=''>\r\n      <TodoList\r\n        {...{\r\n          todoList,\r\n          handleToggle,\r\n          handleDelete,\r\n          addTask,\r\n          handleChange,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  //// DEBUG: Prints changes in state\r\n  // useEffect(() => {\r\n  //   console.log(todoList)\r\n  // }, [todoList])\r\n}\r\n","// React & Firebase\nimport React from 'react';\n// import firebase from 'firebase/compat';\n// Components\nimport Header from './components/Layout/Header';\nimport TodoMain from './components/TodoSection/TodoMain.jsx';\n// import SignIn from './components/Auth/SignIn';\n// Firebase hook\n// import { useAuthState } from 'react-firebase-hooks/auth';\n\n// const auth = firebase.auth();\n// const [user] = useAuthState(auth);\n\n// Main container of the site\nexport default function App() {\n  return (\n    <div className='App'>\n      <Header />\n      <TodoMain />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}