{"version":3,"sources":["firebase.js","elements/Expandable.js","components/Header.js","components/Task.js","components/TodoForm.js","components/TodoList.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Expandable","_ref","words","react_default","a","createElement","className","key","map","word","substring","Header","Task","task","handleToggle","handleDelete","handleChange","handleTogClick","e","preventDefault","currentTarget","id","complete","contentEditable","value","onBlur","ButtonGroup","IconButton","aria-label","onClick","CheckCircleOutline_default","CircleOutlined_default","RemoveCircle_default","TodoForm","addTask","_useState","useState","_useState2","Object","slicedToArray","userInput","setUserInput","onSubmit","ThemeProvider","theme","TextField","autoComplete","label","variant","color","fullWidth","onChange","createTheme","status","danger","palette","primary","main","darker","neutral","contrastText","TodoList","todoList","Stack","direction","divider","Divider","orientation","flexItem","spacing","todo","CURRENT_COLLECTION","App","setTodoList","useEffect","ref","onSnapshot","query","items","forEach","doc","push","data","done","filter","undone","concat","toConsumableArray","firestore","collection","where","Number","get","then","res","docs","update","delete","text","newTask","length","add","target","content","textContent","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.5546c478.chunk.js","sourcesContent":["import firebase from 'firebase'\r\nimport 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCX4S19JEGIJnf255mMBKf609TyjYb8fvk\",\r\n    authDomain: \"amir-michal-homepage.firebaseapp.com\",\r\n    projectId: \"amir-michal-homepage\",\r\n    storageBucket: \"amir-michal-homepage.appspot.com\",\r\n    messagingSenderId: \"668244217822\",\r\n    appId: \"1:668244217822:web:3df6be5852f87331ab574f\",\r\n    measurementId: \"G-QP2T9TXQW6\"\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nexport default firebase;\r\n","import React from 'react'\r\n\r\nexport default function Expandable({ words }) {\r\n    return (\r\n        <div className=\"title\" key=\"exp\">\r\n            {words.map(word => {\r\n                if (word === \" &#x2764; \")\r\n                    return <span className=\"heart\" key=\"heart\"> &#x2764; </span>\r\n                return [<span key=\"firstWord\">{word[0]}</span>,\r\n                        <span key=\"secondWord\">{word.substring(1)}</span>]\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './header.css'\r\nimport Expandable from \"../elements/Expandable\"\r\n\r\nexport default function Header () {\r\n    return (\r\n        <div className=\"header\">\r\n            <Expandable words={[\"Amir\", \" &#x2764; \", \"Michal\"]} />\r\n        </div>\r\n    )\r\n}\r\n","import './task.css'\r\nimport React from 'react'\r\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\r\nimport CircleOutlinedIcon from '@mui/icons-material/CircleOutlined';\r\nimport RemoveCircleIcon from '@mui/icons-material/RemoveCircle';\r\nimport { IconButton, ButtonGroup  } from '@mui/material'\r\n\r\nexport default function Task ({ task, handleToggle, handleDelete, handleChange }) {\r\n\r\n    const handleTogClick = e => {\r\n        e.preventDefault()\r\n        handleToggle(e.currentTarget.id, task)\r\n    }\r\n\r\n    const handleDelClick = e => {\r\n        e.preventDefault()\r\n        handleDelete(e.currentTarget.id)\r\n    }\r\n\r\n    return (\r\n        <div id={task.id} key=\"task\"\r\n        className=\"todo\">\r\n            <span className={\r\n                task.complete\r\n                ? \"todo-content complete\"\r\n                : \"todo-content\"}\r\n                key=\"task-content\"\r\n                id={task.id}\r\n                contentEditable=\"true\"\r\n                value={task.task}\r\n                onBlur={handleChange}>\r\n                {task.task}\r\n            </span>\r\n            <ButtonGroup className='todo-actions' key=\"task-actions\">\r\n                {/* check button */}\r\n\r\n                    {task.complete\r\n                    ?   <IconButton\r\n                            aria-label=\"check\"\r\n                            id={task.id}\r\n                            onClick={handleTogClick}>\r\n                            <CheckCircleOutlineIcon className='todo-btn check-btn' />\r\n                        </IconButton>\r\n                    :   <IconButton\r\n                            aria-label=\"check\"\r\n                            id={task.id}\r\n                            onClick={handleTogClick}>\r\n                            <CircleOutlinedIcon className='todo-btn check-btn' />\r\n                        </IconButton>}\r\n\r\n                {/* delete button */}\r\n                <IconButton\r\n                    aria-label=\"check\"\r\n                    id={task.id}\r\n                    onClick={handleDelClick}>\r\n                    <RemoveCircleIcon className='todo-btn delete-btn' />\r\n                </IconButton>\r\n            </ButtonGroup>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useState } from \"react\";\r\nimport { TextField } from \"@mui/material\"\r\nimport './todo-form.css'\r\nimport { createTheme } from '@mui/material/styles';\r\nimport { ThemeProvider } from '@mui/material'\r\n\r\nexport default function TodoForm ({ addTask }) {\r\n\r\n    const [userInput, setUserInput] = useState('')\r\n\r\n    const handleChange = e => {\r\n        setUserInput(e.currentTarget.value)\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        addTask(userInput)\r\n        setUserInput(\"\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo-form\">\r\n            <form onSubmit={handleSubmit}>\r\n                <ThemeProvider theme={theme}>\r\n                    <TextField\r\n                        autoComplete=\"off\"\r\n                        label=\"Enter a new item\"\r\n                        variant=\"outlined\"\r\n                        color=\"neutral\"\r\n                        fullWidth=\"true\"\r\n                        value={userInput}\r\n                        onChange={handleChange}\r\n                        />\r\n                </ThemeProvider>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nconst theme = createTheme({\r\n    status: {\r\n      danger: '#e53e3e',\r\n    },\r\n    palette: {\r\n      primary: {\r\n        main: '#0971f1',\r\n        darker: '#053e85',\r\n      },\r\n      neutral: {\r\n        main: '#3A4750',\r\n        contrastText: '#3A4750',\r\n      },\r\n    },\r\n  });\r\n","import React from 'react'\r\nimport Task from './Task'\r\nimport { Stack, Divider } from '@mui/material';\r\nimport './todo-list.css'\r\nimport TodoForm from './TodoForm';\r\n\r\nexport default function TodoList({ todoList, handleToggle, handleDelete, addTask, handleChange }) {\r\n  return (\r\n    <Stack className=\"list\">\r\n      <TodoForm addTask={addTask}/>\r\n      <Stack\r\n        direction=\"column\"\r\n        divider={<Divider orientation=\"horizontal\" flexItem className='divider' />}\r\n        spacing={2}\r\n        >\r\n\r\n\r\n        {todoList.map(todo => {\r\n          return (\r\n            <Task task={todo}\r\n              handleToggle={handleToggle}\r\n              handleDelete={handleDelete}\r\n              handleChange={handleChange}\r\n              />\r\n          )\r\n        })}\r\n\r\n      </Stack>\r\n    </Stack>\r\n  )\r\n}\r\n","// React & Firebase imports\nimport React from 'react'\nimport { useEffect, useState } from 'react';\nimport firebase from './firebase.js'\n// Components\nimport Header from './components/Header';\nimport TodoList from './components/TodoList';\n\n\n// Constant reference to the todo collection\nconst CURRENT_COLLECTION = \"todo-list\"\n\n// Main container of the site\nexport default function App() {\n  // Reset state on mount\n  const [todoList, setTodoList] = useState([])\n\n  // Subscribe to colleciton changes\n  useEffect(() => {\n    getTasks()\n  })\n\n  // Create collection\n  const ref = firebase.firestore().collection(CURRENT_COLLECTION)\n\n  function getTasks() {\n    ref.onSnapshot(query => {\n      const items = []\n      query.forEach(doc => {\n        items.push(doc.data())\n      })\n      let done = items.filter(task => task.complete === true)\n      let undone = items.filter(task => task.complete === false)\n      setTodoList([...undone, ...done])\n    })\n  } // Set state as a sorted-by-completion collection array\n\n\n  const handleToggle = (id, task) => {\n    ref.where(\"id\", \"==\", Number(id)).get().then(res => {\n      res.docs.forEach((doc) => {\n        const docRef = firebase.firestore().collection(CURRENT_COLLECTION).doc(doc.id)\n        docRef.update({ complete: !task.complete })\n      });\n    })\n  } // Update completion checkboxes to db\n\n\n  const handleDelete = id => {\n    // let filtered = todoList.filter(task => task.id !== Number(id))\n    // setTodoList(filtered);\n    ref.where(\"id\", \"==\", Number(id)).get().then(res => {\n      res.docs.forEach((doc) => {\n        const docRef = firebase.firestore().collection(CURRENT_COLLECTION).doc(doc.id)\n        docRef.delete()\n        //// DEBUG: Prints success/error messages on deletion\n        // .then(() => {\n        //   console.log(\"Document successfully deleted!\");\n        // }).catch((e) => {\n        //   console.error(\"Error removing document: \", e);\n        // })\n      });\n    })\n  } // Delete document from db by id\n\n  // Adds task to db\n  const addTask = text => {\n    const id= todoList.length++;\n    const newTask = {\n      id: id,\n      task: text,\n      complete: false\n    }\n    ref.add(newTask)\n    //// DEBUG: Prints success/error messages on creation\n    // .then((docRef) => {\n    //   console.log(\"Document written with ID: \", docRef.id);\n    // }).catch((error) => {\n    //   console.error(\"Error adding document: \", error);\n    // })\n  }\n\n  // Update changes in tasks' content ti db\n  const handleChange = e => {\n    let id = e.target.id\n    let content = e.target.textContent\n    ref.where(\"id\", \"==\", Number(id)).get().then(res => {\n      res.docs.forEach((doc) => {\n        const docRef = firebase.firestore().collection(CURRENT_COLLECTION).doc(doc.id)\n        docRef.update({ task: content })\n      });\n    })\n  }\n\n\n\n  return (\n    <div className=\"App\">\n      <Header />\n\n        <TodoList // State/DB functions passed as props\n        todoList={todoList} // State\n        handleToggle={handleToggle} // Completion handler\n        handleDelete={handleDelete} // Delete handler\n        addTask={addTask} // Task creation handler\n        handleChange={handleChange} // Content change handler\n        />\n\n    </div>\n  );\n\n  //// DEBUG: Prints changes in state\n  // useEffect(() => {\n  //   console.log(todoList)\n  // }, [todoList])\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}